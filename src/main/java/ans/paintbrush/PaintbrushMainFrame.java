/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ans.paintbrush;

import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author User
 */
public class PaintbrushMainFrame extends javax.swing.JFrame {

    String path;

    /**
     * Creates new form PaintbrushMainFrame
     */
    public PaintbrushMainFrame() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.drawPanel1.setToolspanel(toolsPanel1);
        this.drawPanel1.setPropertyPanel(propertyPanel3);
        this.toolsPanel1.setDrawPanel(drawPanel1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        propertyPanel2 = new ans.paintbrush.PropertyPanel();
        toolsPanel1 = new ans.paintbrush.ToolsPanel();
        drawPanel1 = new ans.paintbrush.DrawPanel();
        propertyPanel3 = new ans.paintbrush.PropertyPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemOpen = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemFinal = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MMY Designer");
        getContentPane().add(toolsPanel1, java.awt.BorderLayout.WEST);

        javax.swing.GroupLayout drawPanel1Layout = new javax.swing.GroupLayout(drawPanel1);
        drawPanel1.setLayout(drawPanel1Layout);
        drawPanel1Layout.setHorizontalGroup(
            drawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 559, Short.MAX_VALUE)
        );
        drawPanel1Layout.setVerticalGroup(
            drawPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
        );

        getContentPane().add(drawPanel1, java.awt.BorderLayout.CENTER);

        propertyPanel3.setMaximumSize(new java.awt.Dimension(500, 2147483647));
        propertyPanel3.setPreferredSize(new java.awt.Dimension(200, 200));
        getContentPane().add(propertyPanel3, java.awt.BorderLayout.EAST);

        jMenu1.setText("File");

        jMenuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/open.png"))); // NOI18N
        jMenuItemOpen.setText("Open");
        jMenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemOpen);

        jMenuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/save.png"))); // NOI18N
        jMenuItemSave.setText("Save...");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSave);

        jMenuItemFinal.setText("Load Final Template");
        jMenuItemFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFinalActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemFinal);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItemExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/exit.png"))); // NOI18N
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");

        jMenuItem5.setText("About");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Project");
        JMenuItem mntmAbout = new JMenuItem();
        mntmAbout.setMnemonic('a');
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        FileFilter filefilterSvg = new FileNameExtensionFilter("SVG Image File(.svg)", "svg");
        FileFilter filefilterPng = new FileNameExtensionFilter("Png Image File(.png)", "png");
        fileChooser.addChoosableFileFilter(filefilterSvg);
        fileChooser.addChoosableFileFilter(filefilterPng);
        fileChooser.setAcceptAllFileFilterUsed(true);
        int result = fileChooser.showSaveDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filename = selectedFile.getAbsolutePath();
            if (fileChooser.getFileFilter() == filefilterPng) {
                if (!filename.toLowerCase().endsWith(".png")) {
                    filename = filename + ".png";
                }
                boolean res = drawPanel1.saveImageAsPng(filename);
                if (res == false) {
                    JOptionPane.showMessageDialog(this, "File Can't be saved", "Error Message", JOptionPane.ERROR_MESSAGE);
                }
            } else if (fileChooser.getFileFilter() == filefilterSvg) {
                if (!filename.toLowerCase().endsWith(".svg")) {
                    filename = filename + ".svg";
                }
                boolean res = drawPanel1.saveImageAsSVG(filename);
                if (res == false) {
                    JOptionPane.showMessageDialog(this, "File Can't be saved", "Error Message", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    private void jMenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        FileFilter filefilterSvg = new FileNameExtensionFilter("SVG Image File(.svg)", "svg");
        FileFilter filefilterPng = new FileNameExtensionFilter("Png Image File(.png)", "png");
        fileChooser.addChoosableFileFilter(filefilterSvg);
        fileChooser.addChoosableFileFilter(filefilterPng);
        fileChooser.setAcceptAllFileFilterUsed(true);
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();

            String filename = selectedFile.getAbsolutePath();
            if (fileChooser.getFileFilter() == filefilterSvg) {
                if (filename.toLowerCase().endsWith(".svg")) {
                    ArrayList<Shape> allShapes = Utility.loadSVG(filename);
                    drawPanel1.setAllShapes(allShapes);
                    System.out.println(filename);
                }
            }
            if (fileChooser.getFileFilter() == filefilterPng) {
                if (filename.toLowerCase().endsWith(".png")) {

                }
            }
        }
//        File file =fileChooser.getSelectedFile();
//           Image img =ImageIO.read(file);
//           ImageIcon icon=new ImageIcon(img);
//           JLabel.setIcon(icon);

    }//GEN-LAST:event_jMenuItemOpenActionPerformed

    private void jMenuItemFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFinalActionPerformed
        // TODO add your handling code here:
        ArrayList<Shape> allShapes = Utility.loadSVG("E:\\University\\project\\paintbrush\\src\\main\\resources\\Templates\\Paper Final.svg");
        drawPanel1.setAllShapes(allShapes);
    }//GEN-LAST:event_jMenuItemFinalActionPerformed
//    private Image zoomImage(int w,int h,Image img){
//        BufferedImage buf =new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
//        Graphics2D grf=buf.createGraphics();
//        grf.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
//        grf.drawImage(img, 0, 0, w, h,null);
//        grf.dispose();
//        return  buf;
//        
//    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaintbrushMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaintbrushMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaintbrushMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaintbrushMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaintbrushMainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private ans.paintbrush.DrawPanel drawPanel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemFinal;
    private javax.swing.JMenuItem jMenuItemOpen;
    private javax.swing.JMenuItem jMenuItemSave;
    private ans.paintbrush.PropertyPanel propertyPanel2;
    private ans.paintbrush.PropertyPanel propertyPanel3;
    private ans.paintbrush.ToolsPanel toolsPanel1;
    // End of variables declaration//GEN-END:variables
}
